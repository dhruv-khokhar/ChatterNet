name: Deploy to VPS # name of the workflow - appears in GitHub Actions UI

on: # trigger the deployment process whenever there is a push to master branch
  push:
    branches:
      - master

jobs: # we have 2 jobs : build and deploy
  build:  # build steps
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code # this action checks out the source code from the repo and then proceed to next step
        uses: actions/checkout@v2

      - name: Set up Docker Buildx  # this enable multi platform docker images
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  # personal access token on Docker Hub

      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

  deploy: # deploy steps
    needs: build  # requires successful completion of build step ie if build fails, deploy won't run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add VPS SSH host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 88.222.242.108 >> ~/.ssh/known_hosts

      - name: Set up SSH key for authentication
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH into VPS and deploy # this action allows to run command over SSH on a remote server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 88.222.242.108
          username: root
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: 22
          script: | # here in remote server, simply pull the master branch, stop any running containers, and rebuild and start the docker containers
            cd /home/root/projects/nodejsmicroservices/NodeJS-Microservices
            git pull origin master
            docker-compose down
            docker-compose up -d
      # debugging steps
      - name: Debug SSH connection (optional)
        run: |
          ssh -v -i ~/.ssh/id_rsa root@88.222.242.108 "echo 'SSH connection successful'"
        continue-on-error: true